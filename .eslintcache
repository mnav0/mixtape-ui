[{"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js":"1","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js":"2","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/reportWebVitals.js":"3","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js":"4","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js":"5","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js":"6","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists.js":"7"},{"size":715,"mtime":1607610501047,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":1607560293306,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607560293309,"results":"11","hashOfConfig":"9"},{"size":2893,"mtime":1607610066804,"results":"12","hashOfConfig":"9"},{"size":1527,"mtime":1607564815042,"results":"13","hashOfConfig":"9"},{"size":131,"mtime":1607610028323,"results":"14","hashOfConfig":"9"},{"size":311,"mtime":1607610270377,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fk2fnz",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js",["33"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js",[],["34","35"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/reportWebVitals.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js",["36","37","38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport songService from \"../services/song-service\";\nimport UserContext from '../user'\n\nconst SongList = () => {\n  const [songs, setSongs] = useState(\"\");\n  const [songLoading, setSongLoading] = useState(true);\n  const [artistLoading, setArtistLoading] = useState(true);\n  const [genreLoading, setGenreLoading] = useState(true);\n\n  const username = React.useContext(UserContext)\n\n  // getContext = () => {\n  //   const context = React.useContext(UserContext)\n  // }\n\n  // this.getContext()\n\n  useEffect(() => {\n    songService\n      .findAllSongs()\n      .then(songs => {\n        songs.map((song, i) => {\n          songService\n            .findSongArtists(song.id)\n            .then(response => (song.artists = response))\n            .finally(() => setArtistLoading(false));\n          songService\n            .findSongGenres(song.id)\n            .then(response => (song.genres = response))\n            .finally(() => setGenreLoading(false));\n        });\n        setSongs(songs);\n      })\n      // .finally(() => setSongLoading(false));\n  }, []);\n\n  console.log(songs)\n\n  return (\n    <div>\n      {songLoading ? (\n        <div>\n        <h1>song loading true</h1>\n        <p>{username}</p>\n        </div>\n      ) : (\n        <div className=\"container-fluid\">\n          <a href=\"../../index.html\">Home</a>\n          <h1>Songs</h1>\n          <table>\n            <tbody>\n              {songs.map(song => (\n                <tr key={song.id}>\n                  <td>{song.name}</td>\n                  { song.artists ?\n                            <td>{song.artists.map((artist) =>\n                              <p key={artist.id}>{artist.firstName} {artist.lastName}</p>\n                            )}</td>\n                                : <td></td> }\n                            <td>{song.duration}</td>\n                            { song.genres ?\n                                <td>{song.genres.map((genre) =>\n                                    <p key={genre.id}>{genre.name}</p>\n                                )}</td> : <td></td> }\n                            <td>\n                    {/*<a className=\"btn btn-primary float-right\"*/}\n                    {/*   href={`/course-editor/course-editor.html?courseId=${course.courseId}`}>*/}\n                    {/*  Edit*/}\n                    {/*</a>*/}\n                    {/* <button className=\"btn btn-danger float-right\"\n                                      onClick={() => deleteSong(song.id)}>\n                                Delete\n                              </button> */}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div>\n            {/* { context ? <div>Context used</div> : <div>Empty</div>} */}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SongList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js",["41"],"const FIND_ALL_SONGS  = \"http://localhost:8080/findAllSongs\"\nconst FIND_SONG_BY_ID = \"http://localhost:8080/findSongById\"\nconst CREATE_SONG_URL = \"http://localhost:8080/createSong\"\nconst DELETE_SONG_URL = \"http://localhost:8080/deleteSong\"\nconst ADD_SONG_TO_PLAYLIST = \"http://localhost:8080/addSongToPlaylist\"\nconst FIND_SONG_ARTISTS = \"http://localhost:8080/findArtistsBySong\"\nconst FIND_SONG_GENRES = \"http://localhost:8080/findGenresBySong\"\n\nexport const findAllSongs = () =>\n    fetch(`${FIND_ALL_SONGS}`)\n    .then(response => response.json())\n\nexport const findSongById = (id) =>\n    fetch(`${FIND_SONG_BY_ID}/${id}`)\n    .then(response => response.json())\n\nexport const createSong = (artistId, songName) =>\n    fetch(`${CREATE_SONG_URL}/${artistId}/${songName}`)\n    .then(response => response.json())\n\nexport const deleteSong = (id) =>\n    fetch(`${DELETE_SONG_URL}/${id}`)\n\nexport const addSongToPlaylist = (playlistId, songId) =>\n    fetch(`${ADD_SONG_TO_PLAYLIST}/${playlistId}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongArtists = (songId) =>\n    fetch(`${FIND_SONG_ARTISTS}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongGenres = (id) =>\n    fetch(`${FIND_SONG_GENRES}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport default { findAllSongs, findSongById, createSong, deleteSong, addSongToPlaylist, findSongArtists, findSongGenres }","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js",["42"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists.js",["43"],{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":11},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"52","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},{"ruleId":"44","severity":1,"message":"53","line":8,"column":23,"nodeType":"46","messageId":"47","endLine":8,"endColumn":37},{"ruleId":"44","severity":1,"message":"54","line":9,"column":10,"nodeType":"46","messageId":"47","endLine":9,"endColumn":23},{"ruleId":"44","severity":1,"message":"55","line":10,"column":10,"nodeType":"46","messageId":"47","endLine":10,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":24,"column":29,"nodeType":"58","messageId":"59","endLine":24,"endColumn":31},{"ruleId":"60","severity":1,"message":"61","line":41,"column":1,"nodeType":"62","endLine":41,"endColumn":122},{"ruleId":"44","severity":1,"message":"52","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},{"ruleId":"44","severity":1,"message":"52","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'ReactDOM' is defined but never used.","'setSongLoading' is assigned a value but never used.","'artistLoading' is assigned a value but never used.","'genreLoading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]