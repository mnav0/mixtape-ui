[{"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js":"1","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js":"2","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js":"3","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js":"4","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/artist-list/artist-list.js":"5","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/users/users.js":"6","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/home.js":"7","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/profile/profile.js":"8","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js":"9","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/artist-service.js":"10","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/user-service.js":"11","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/listener-service.js":"12","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user-form/userForm.js":"13","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-form/song-form.js":"14","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-details/song-details.js":"15","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists/playlists.js":"16","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/playlist-service.js":"17","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-details/playlist-details.js":"18"},{"size":355,"mtime":1607706360486,"results":"19","hashOfConfig":"20"},{"size":1270,"mtime":1607790464316,"results":"21","hashOfConfig":"20"},{"size":131,"mtime":1607610028323,"results":"22","hashOfConfig":"20"},{"size":1910,"mtime":1607734339030,"results":"23","hashOfConfig":"20"},{"size":1696,"mtime":1607706069779,"results":"24","hashOfConfig":"20"},{"size":2348,"mtime":1607721274825,"results":"25","hashOfConfig":"20"},{"size":611,"mtime":1607726003546,"results":"26","hashOfConfig":"20"},{"size":2954,"mtime":1607730523261,"results":"27","hashOfConfig":"20"},{"size":2105,"mtime":1607733715923,"results":"28","hashOfConfig":"20"},{"size":1126,"mtime":1607728647623,"results":"29","hashOfConfig":"20"},{"size":996,"mtime":1607706069808,"results":"30","hashOfConfig":"20"},{"size":186,"mtime":1607706069807,"results":"31","hashOfConfig":"20"},{"size":3061,"mtime":1607733438589,"results":"32","hashOfConfig":"20"},{"size":1969,"mtime":1607734312726,"results":"33","hashOfConfig":"20"},{"size":2188,"mtime":1607734051189,"results":"34","hashOfConfig":"20"},{"size":1434,"mtime":1607790927323,"results":"35","hashOfConfig":"20"},{"size":480,"mtime":1607792277581,"results":"36","hashOfConfig":"20"},{"size":5217,"mtime":1607792908028,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"fk2fnz",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js",[],["89","90"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js",["91","92"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js",["93"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst UserContext = React.createContext()\n\nexport default UserContext","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js",["94","95"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport songService from \"../services/song-service\";\nimport UserContext from \"../user\";\n\nconst SongList = () => {\n  const [songInfo, setSongInfo] = useState(\"\");\n  const [songLoading, setSongLoading] = useState(true);\n\n  const username = React.useContext(UserContext);\n\n  useEffect(() => {\n    songService\n      .getSongsInfo()\n      .then(response => setSongInfo(response))\n      .finally(() => setSongLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container align-items-left\">\n      <a href=\"..\">Home</a>\n      <h2>Songs</h2>\n      {songLoading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Artists</th>\n                <th scope=\"col\">Duration (s)</th>\n                <th scope=\"col\">Genres</th>\n              </tr>\n            </thead>\n            <tbody>\n              {songInfo.map((song, i) => {\n                return (\n                  <tr key={i}>\n                    <td><Link to={`/song/${song.song.id}`}>{song.song.name}</Link></td>\n                    <td>\n                      {song.artistNames.map((artist, key) => (\n                        <div key={key}>\n                          <p>{artist}</p>\n                        </div>\n                      ))}\n                    </td>\n                    <td>{song.song.duration}</td>\n                    <td>\n                      {song.genreNames.map((genre, index) => (\n                        <p key={index}>{genre}</p>\n                      ))}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SongList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/artist-list/artist-list.js",["96"],"import React, { useState, useEffect } from \"react\";\nimport artistService from \"../services/artist-service\";\nimport UserContext from \"../user\";\nimport { Link } from \"react-router-dom\";\n\n\nconst ArtistList = () => {\n  const [artistInfo, setArtistInfo] = useState(\"\");\n  const [artistListLoading, setArtistListLoading] = useState(true);\n\n  const username = React.useContext(UserContext);\n\n  useEffect(() => {\n    artistService\n      .findArtistInformation()\n      .then(response => setArtistInfo(response))\n      .finally(() => setArtistListLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container align-items-left\">\n        <a href=\"..\">Home</a>\n        <h2> Artists </h2>\n      {(artistListLoading) ? (\n        <div>\n        <h2>Loading ...</h2>\n        </div>\n      ) : (\n        <>\n        <table className=\"table my-4\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Bio</th>\n              <th scope=\"col\">Social Media Links</th>\n            </tr>\n          </thead>\n          <tbody>\n            {artistInfo.map((artist, i) => {\n                console.log(artist)\n              return (\n                <tr key={i}>\n                  <td><Link to={`/profile/${artist.artist.userId}`}> {artist.name} </Link></td>\n                  <td>{artist.artist.bio}</td>\n                  <td>\n                    {artist.artist.socialMedias.map(socialMedia => (\n                      <p key={socialMedia.id}>{socialMedia.url}</p>\n                    ))}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n     )}\n    </div>\n  );\n};\n\nexport default ArtistList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/users/users.js",["97","98","99","100","101","102","103","104"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport artistService from \"../services/artist-service\";\nimport listenerService from \"../services/listener-service\";\nimport userService from \"../services/user-service\";\nimport UserForm from \"../user-form/userForm\";\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n  const [userLoading, setUserLoading] = useState(true);\n\n  const [newFirstName, setNewFirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newDOB, setNewDOB] = useState(\"\");\n\n  useEffect(() => {\n    userService\n      .findAllUsers()\n      .then((response) => setUsers(response))\n      .finally(() => setUserLoading(false));\n  }, []);\n\n  const createUser = () => {\n    const newUser = {\n      firstName: newFirstName,\n      lastName: newLastName,\n      username: newUsername,\n      password: newPassword,\n      dob: newDOB,\n    };\n    userService\n      .createNewUser(newUser)\n      .then((response) => console.log(response));\n  };\n\n  return (\n    <div className=\"container align-items-left\">\n      <a href=\"..\">Home</a>\n      <h1>Users</h1>\n      {userLoading ? (\n        <h2>loading ...</h2>\n      ) : (\n        <>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Username</th>\n                <th scope=\"col\">Birthday</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, i) => {\n                  console.log(user)\n                return (\n                  <tr key={i}>\n                    <td>{user.firstName}</td>\n                    <td>{user.lastName}</td>\n                    <td><Link to={`/profile/${user.id}`}>{user.username}</Link></td>\n                    <td>{user.dob}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n      <div>\n        <h2>Create new user</h2>\n        <UserForm currUser={{firstName: '', lastName: '', username: '', password: '', dob: ''}} isEditing={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/home.js",["105","106","107","108","109"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport UserContext from '../user'\nimport { Link } from 'react-router-dom';\nimport SongForm from '../song-form/song-form'\n\nconst Home = () => {\n  return (\n    <div>\n        <h1>Home</h1>\n        <div>\n            <Link to=\"/songs\">Songs</Link>\n        </div>\n        <div>\n            <Link to=\"/artists\">Artists</Link>\n        </div>\n        <div>\n            <Link to=\"/playlists\">Playlists</Link>\n        </div>\n        <div>\n            <Link to=\"/users\">Users</Link>\n        </div>\n    </div>\n  );\n}\n\nexport default Home;","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/profile/profile.js",["110","111","112","113","114"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport artistService from \"../services/artist-service\";\nimport listenerService from \"../services/listener-service\";\nimport userService from \"../services/user-service\";\nimport UserForm from \"../user-form/userForm\";\nimport SongForm from \"../song-form/song-form\";\n\nconst Profile = ({ ...props }) => {\n  const [user, setUser] = useState({});\n  const [userLoading, setUserLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [isArtist, setIsArtist] = useState(false);\n\n  const userId = props.match.params.id;\n\n  const history = useHistory();\n\n  const getType = () => {\n    artistService.findAllArtists().then(response => {\n      console.log(response);\n      {\n        response.map(\n          (artist, i) => artist.userId == userId && setIsArtist(true)\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    userService\n      .findUserById(userId)\n      .then(response => setUser(response))\n      .finally(() => {\n        getType();\n        setUserLoading(false);\n      });\n  }, []);\n\n  const edit = () => {\n    setIsEditing(true);\n  };\n\n  const deleteUser = () => {\n    userService.deleteUser(userId).then(response => console.log(response));\n    setIsDeleted(true);\n  };\n\n  return (\n    <div className=\"container my-5\">\n      {isDeleted ? (\n        <>\n          <h2>user has been deleted</h2>\n          <Link to={\"/users\"}>Back to all users</Link>\n        </>\n      ) : (\n        <>\n          <h1>Profile</h1>\n          {userLoading ? (\n            <h2>loading ...</h2>\n          ) : (\n            <>\n              <div>\n                <h3>\n                  {user.firstName} {user.lastName}\n                </h3>\n                {isEditing ? (\n                  <UserForm currUser={user} isEditing={true} />\n                ) : (\n                  <>\n                    <p>birthday: {user.dob}</p>\n                    <p>username: {user.username}</p>\n                    <p>password: {user.password}</p>\n                  </>\n                )}\n                {!isEditing && (\n                  <>\n                    <button className=\"btn btn-warning\" onClick={() => edit()}>\n                      edit\n                    </button>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => deleteUser()}\n                    >\n                      delete\n                    </button>\n                  </>\n                )}\n              </div>\n              {isArtist ? (\n                <SongForm\n                  currSong={{ name: \"\", duration: \"\" }}\n                  isEditing={false}\n                  artistId={userId}\n                />\n              ) : (\n                <></>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js",["115"],"const FIND_ALL_SONGS  = \"http://localhost:8080/findAllSongs\"\nconst FIND_SONG_BY_ID = \"http://localhost:8080/findSongById\"\nconst DELETE_SONG_URL = \"http://localhost:8080/deleteSong\"\nconst ADD_SONG_TO_PLAYLIST = \"http://localhost:8080/addSongToPlaylist\"\nconst FIND_SONG_ARTISTS = \"http://localhost:8080/findArtistsBySong\"\nconst FIND_SONG_GENRES = \"http://localhost:8080/findGenresBySong\"\nconst GET_SONGS_INFO = \"http://localhost:8080/getSongsInformation\"\nconst URL = \"http://localhost:8080\"\n\nexport const findAllSongs = () =>\n    fetch(`${FIND_ALL_SONGS}`)\n    .then(response => response.json())\n\nexport const getSongsInfo = () =>\n    fetch(`${GET_SONGS_INFO}`)\n    .then(response => response.json())\n\nexport const findSongById = (id) =>\n    fetch(`${FIND_SONG_BY_ID}/${id}`)\n    .then(response => response.json())\n\nexport const createNewSong = (artistId, song) =>\n    fetch(`${URL}/${artistId}/createSong`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...song\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => response.json());\n\nexport const updateSong = (song, songId) =>\n  fetch(`${URL}/updateSong/${songId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...song\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\nexport const deleteSong = (id) =>\n    fetch(`${DELETE_SONG_URL}/${id}`)\n\nexport const addSongToPlaylist = (playlistId, songId) =>\n    fetch(`${ADD_SONG_TO_PLAYLIST}/${playlistId}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongArtists = (songId) =>\n    fetch(`${FIND_SONG_ARTISTS}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongGenres = (id) =>\n    fetch(`${FIND_SONG_GENRES}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport default { findAllSongs, updateSong, getSongsInfo, findSongById, createNewSong, deleteSong, addSongToPlaylist, findSongArtists, findSongGenres }","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/artist-service.js",["116"],"const FIND_ALL_ARTISTS = \"http://localhost:8080/findAllArtists\"\nconst FIND_USER_BY_ID = \"http://localhost:8080/findUserById\"\nconst FIND_SOCIAL_MEDIA_BY_ARTIST = \"http://localhost:8080/findSocialMediaByArtist\"\nconst FIND_ARTIST_INFORMATION = \"http://localhost:8080/findArtistsInformation\"\n\nexport const findArtistInformation = () =>\n    fetch(`${FIND_ARTIST_INFORMATION}`)\n        .then(response => response.json())\n\nexport const findAllArtists = () =>\n    fetch(`${FIND_ALL_ARTISTS}`)\n        .then(response => response.json())\n\nexport const findUserForArtist = (id) =>\n    fetch(`${FIND_USER_BY_ID}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport const findSocialMediaForArtist = (id) =>\n    fetch(`${FIND_SOCIAL_MEDIA_BY_ARTIST}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport default { findAllArtists, findArtistInformation, findUserForArtist, findSocialMediaForArtist}","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/user-service.js",["117"],"const URL = \"http://localhost:8080\";\n\nexport const findUserById = (id) =>\n  fetch(`${URL}/findUserById/${id}`).then((response) => response.json());\n\n  export const findAllUsers = () =>\n  fetch(`${URL}/findAllUsers`).then((response) => response.json());\n\n  export const createNewUser = (user) =>\n  fetch(`${URL}/createUser`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      ...user\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const updateUser = (user, userId) =>\n  fetch(`${URL}/updateUser/${userId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...user\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const deleteUser = (userId) =>\n  fetch(`${URL}/deleteUser/${userId}`, {\n    method: \"DELETE\",\n  }).then((response) => response.text());\n\nexport default { findUserById, findAllUsers, createNewUser, updateUser, deleteUser };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/listener-service.js",["118"],"const URL = \"http://localhost:8080/\";\n\nexport const findAllListeners = () =>\n  fetch(`${URL}findAllListeners`).then((response) => response.json());\n\nexport default { findAllListeners };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user-form/userForm.js",["119","120","121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport artistService from \"../services/artist-service\";\nimport listenerService from \"../services/listener-service\";\nimport userService from \"../services/user-service\";\n\nconst UserForm = ({currUser, isEditing}) => {\n\n    const [newFirstName, setNewFirstName] = useState(currUser.firstName)\n    const [newLastName, setNewLastName] = useState(currUser.lastName);\n    const [newUsername, setNewUsername] = useState(currUser.username);\n    const [newPassword, setNewPassword] = useState(currUser.password);\n\n    const createUser = () => {\n        const newUser = {\n          firstName: newFirstName,\n          lastName: newLastName,\n          username: newUsername,\n          password: newPassword,\n        };\n        userService\n          .createNewUser(newUser)\n          .then((response) => console.log(response));\n      };\n\n    const update = () => {\n        const updateUser = {\n            ...currUser,\n            firstName: newFirstName,\n            lastName: newLastName,\n            username: newUsername,\n            password: newPassword,\n        }\n        userService.updateUser(updateUser, currUser.id).then((response) => console.log(response))\n    }\n\n    const deleteUser = () => {\n        console.log(currUser.id)\n    }\n\n\n    return (\n        <form className=\"my-4\">\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            value={newFirstName}\n            onChange={(event) => setNewFirstName(event.target.value)}\n            id=\"firstName\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            value={newLastName}\n            onChange={(event) => setNewLastName(event.target.value)}\n            id=\"lastName\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            value={newUsername}\n            onChange={(event) => setNewUsername(event.target.value)}\n            id=\"username\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            value={newPassword}\n            onChange={(event) => setNewPassword(event.target.value)}\n            id=\"password\"\n            className=\"form-control col-6\"\n            type=\"password\"\n          />\n        </div>\n        {isEditing ? (\n            <button onClick={() => update()} className=\"btn btn-success\">\n                UPDATE\n            </button>\n        )\n        : (\n        <button onClick={() => createUser()} className=\"btn btn-success\">\n          <p className=\"p-2 mb-0\">CREATE USER</p>\n        </button>\n        )}\n      </form>\n    )\n}\n\nexport default UserForm","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-form/song-form.js",["124","125"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport songService from \"../services/song-service\";\n\nconst SongForm = ({currSong, isEditing, artistId}) => {\n\n    const [newName, setNewName] = useState(currSong.name);\n    const [newDuration, setNewDuration] = useState(currSong.duration);\n    \n    const createSong = () => {\n        const newSong = {\n            name: newName,\n            duration: newDuration\n        };\n        songService\n          .createNewSong(artistId, newSong)\n          .then((response) => console.log(response));\n      };\n\n      const updateSong = () => {\n        const updatedSong = {\n            ...currSong,\n            name: newName,\n            duration: newDuration\n        }\n        console.log(updatedSong)\n        songService.updateSong(updatedSong, currSong.id).then((response) => console.log(response))\n    }\n    \n    return (\n        <div>\n        <form className=\"my-4\">\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Song Name</label>\n          <input\n            value={newName}\n            onChange={(event) => setNewName(event.target.value)}\n            id=\"name\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"duration\">Duration (s)</label>\n          <input\n            value={newDuration}\n            onChange={(event) => setNewDuration(event.target.value)}\n            id=\"duration\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        {isEditing ? (\n            <button onClick={() => updateSong()}>\n                UPDATE\n            </button>\n        )\n        : (\n        <button onClick={() => createSong()} className=\"btn btn-success\" type=\"button\">\n          <p className=\"p-2 mb-0\">CREATE SONG</p>\n        </button>\n        )}\n      </form>\n      </div>\n    )\n}\n\nexport default SongForm","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-details/song-details.js",["126","127"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport songService from \"../services/song-service\";\nimport SongForm from \"../song-form/song-form\";\n\nconst SongDetails = ({ ...props }) => {\n  const [song, setSong] = useState({});\n  const [songLoading, setSongLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n\n  const songId = props.match.params.id;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    songService\n      .findSongById(songId)\n      .then(response => setSong(response))\n      .finally(() => {\n        setSongLoading(false);\n      });\n  }, []);\n\n  const edit = () => {\n    setIsEditing(true);\n  };\n\n  const deleteSong = () => {\n    songService.deleteSong(songId).then(response => console.log(response));\n    setIsDeleted(true);\n  };\n\n  return (\n    <div className=\"container my-5\">\n      {isDeleted ? (\n        <>\n          <h2>Song has been deleted</h2>\n          <Link to={\"/songs\"}>Back to all songs</Link>\n        </>\n      ) : (\n        <>\n          <h1>Song Details</h1>\n          {songLoading ? (\n            <h2>loading ...</h2>\n          ) : (\n            <>\n              <div>\n                <h3>\n                  {song.name}\n                </h3>\n                {isEditing ? (\n                  <SongForm currSong={song} isEditing={true} />\n                ) : (\n                  <>\n                    <p>Artists: {}</p>\n                    <p>Duration: {song.duration}</p>\n                    <p>Genres: {}</p>\n                  </>\n                )}\n                {!isEditing && (\n                  <>\n                    <button className=\"btn btn-warning\" onClick={() => edit()}>\n                      edit\n                    </button>\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={() => deleteSong()}\n                    >\n                      delete\n                    </button>\n                  </>\n                )}\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SongDetails;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists/playlists.js",["128"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/playlist-service.js",["129"],"const URL = \"http://localhost:8080/\";\n\nexport const findAllPlaylists = () =>\n  fetch(`${URL}findAllPlaylists`).then((response) => response.json());\n\nexport const findPlaylistById = (id) =>\n  fetch(`${URL}findPlaylistById/${id}`).then((response) => response.json());\n\nexport const findSongsForPlaylist = (id) =>\n  fetch(`${URL}getSongInformationForPlaylist/${id}`).then((response) => response.json());\n\n\nexport default { findAllPlaylists, findPlaylistById, findSongsForPlaylist };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-details/playlist-details.js",["130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":12},{"ruleId":"136","severity":1,"message":"140","line":9,"column":27,"nodeType":"138","messageId":"139","endLine":9,"endColumn":33},{"ruleId":"136","severity":1,"message":"141","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"141","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"142","line":11,"column":9,"nodeType":"138","messageId":"139","endLine":11,"endColumn":17},{"ruleId":"136","severity":1,"message":"142","line":11,"column":9,"nodeType":"138","messageId":"139","endLine":11,"endColumn":17},{"ruleId":"136","severity":1,"message":"143","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},{"ruleId":"136","severity":1,"message":"145","line":12,"column":24,"nodeType":"138","messageId":"139","endLine":12,"endColumn":39},{"ruleId":"136","severity":1,"message":"146","line":13,"column":23,"nodeType":"138","messageId":"139","endLine":13,"endColumn":37},{"ruleId":"136","severity":1,"message":"147","line":14,"column":23,"nodeType":"138","messageId":"139","endLine":14,"endColumn":37},{"ruleId":"136","severity":1,"message":"148","line":15,"column":23,"nodeType":"138","messageId":"139","endLine":15,"endColumn":37},{"ruleId":"136","severity":1,"message":"149","line":16,"column":18,"nodeType":"138","messageId":"139","endLine":16,"endColumn":27},{"ruleId":"136","severity":1,"message":"150","line":25,"column":9,"nodeType":"138","messageId":"139","endLine":25,"endColumn":19},{"ruleId":"136","severity":1,"message":"151","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"152","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"141","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"153","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":19},{"ruleId":"136","severity":1,"message":"154","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"144","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},{"ruleId":"136","severity":1,"message":"155","line":18,"column":9,"nodeType":"138","messageId":"139","endLine":18,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":23,"column":7,"nodeType":"158","messageId":"159","endLine":27,"endColumn":8},{"ruleId":"160","severity":1,"message":"161","line":25,"column":40,"nodeType":"162","messageId":"163","endLine":25,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":39,"column":6,"nodeType":"166","endLine":39,"endColumn":8,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":64,"column":1,"nodeType":"170","endLine":64,"endColumn":151},{"ruleId":"168","severity":1,"message":"169","line":32,"column":1,"nodeType":"170","endLine":32,"endColumn":101},{"ruleId":"168","severity":1,"message":"169","line":36,"column":1,"nodeType":"170","endLine":36,"endColumn":86},{"ruleId":"168","severity":1,"message":"169","line":6,"column":1,"nodeType":"170","endLine":6,"endColumn":37},{"ruleId":"136","severity":1,"message":"152","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"171","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"143","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},{"ruleId":"136","severity":1,"message":"172","line":37,"column":11,"nodeType":"138","messageId":"139","endLine":37,"endColumn":21},{"ruleId":"136","severity":1,"message":"152","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"171","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"155","line":14,"column":9,"nodeType":"138","messageId":"139","endLine":14,"endColumn":16},{"ruleId":"164","severity":1,"message":"173","line":23,"column":6,"nodeType":"166","endLine":23,"endColumn":8,"suggestions":"174"},{"ruleId":"136","severity":1,"message":"175","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":13,"column":1,"nodeType":"170","endLine":13,"endColumn":77},{"ruleId":"136","severity":1,"message":"155","line":17,"column":9,"nodeType":"138","messageId":"139","endLine":17,"endColumn":16},{"ruleId":"164","severity":1,"message":"176","line":47,"column":6,"nodeType":"166","endLine":47,"endColumn":8,"suggestions":"177"},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'ReactDOM' is defined but never used.","'username' is assigned a value but never used.","'artistService' is defined but never used.","'listenerService' is defined but never used.","'setNewFirstName' is assigned a value but never used.","'setNewLastName' is assigned a value but never used.","'setNewUsername' is assigned a value but never used.","'setNewPassword' is assigned a value but never used.","'setNewDOB' is assigned a value but never used.","'createUser' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserContext' is defined but never used.","'SongForm' is defined but never used.","'history' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getType' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["180"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","'deleteUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'songId'. Either include it or remove the dependency array.",["181"],"'userService' is defined but never used.","React Hook useEffect has a missing dependency: 'playlistId'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [getType, userId]",{"range":"189","text":"190"},"Update the dependencies array to be: [songId]",{"range":"191","text":"192"},"Update the dependencies array to be: [playlistId]",{"range":"193","text":"194"},[1168,1170],"[getType, userId]",[698,700],"[songId]",[1540,1542],"[playlistId]"]