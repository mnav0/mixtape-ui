[{"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js":"1","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js":"2","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js":"3","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js":"4","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/artist-list/artist-list.js":"5","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/users/users.js":"6","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/profile/profile.js":"7","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js":"8","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/artist-service.js":"9","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/user-service.js":"10","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/listener-service.js":"11","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-form/song-form.js":"12","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-details/song-details.js":"13","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists/playlists.js":"14","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/playlist-service.js":"15","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-details/playlist-details.js":"16","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-table.js":"17","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/colors.js":"18","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-form.js":"19","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user-form/user-form.js":"20","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/listener-list/listener-list.js":"21","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-form/playlist-form.js":"22","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/menu/menu.js":"23","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/home.js":"24","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/styled.js":"25","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-context-selector.js":"26","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-details.js":"27","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/button.js":"28","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/styled.js":"29"},{"size":355,"mtime":1607706360486,"results":"30","hashOfConfig":"31"},{"size":2260,"mtime":1607910202236,"results":"32","hashOfConfig":"31"},{"size":133,"mtime":1607902298065,"results":"33","hashOfConfig":"31"},{"size":2660,"mtime":1607894618684,"results":"34","hashOfConfig":"31"},{"size":1957,"mtime":1607892857946,"results":"35","hashOfConfig":"31"},{"size":2002,"mtime":1607910385275,"results":"36","hashOfConfig":"31"},{"size":3622,"mtime":1607906805325,"results":"37","hashOfConfig":"31"},{"size":2105,"mtime":1607733715923,"results":"38","hashOfConfig":"31"},{"size":1126,"mtime":1607728647623,"results":"39","hashOfConfig":"31"},{"size":996,"mtime":1607706069808,"results":"40","hashOfConfig":"31"},{"size":335,"mtime":1607887227881,"results":"41","hashOfConfig":"31"},{"size":2070,"mtime":1607906896605,"results":"42","hashOfConfig":"31"},{"size":2674,"mtime":1607908295460,"results":"43","hashOfConfig":"31"},{"size":1679,"mtime":1607892773380,"results":"44","hashOfConfig":"31"},{"size":1371,"mtime":1607887227882,"results":"45","hashOfConfig":"31"},{"size":5487,"mtime":1607907682570,"results":"46","hashOfConfig":"31"},{"size":740,"mtime":1607902462157,"results":"47","hashOfConfig":"31"},{"size":105,"mtime":1607809851914,"results":"48","hashOfConfig":"31"},{"size":452,"mtime":1607910517229,"results":"49","hashOfConfig":"31"},{"size":3222,"mtime":1607910571377,"results":"50","hashOfConfig":"31"},{"size":2615,"mtime":1607910080539,"results":"51","hashOfConfig":"31"},{"size":5245,"mtime":1607909913752,"results":"52","hashOfConfig":"31"},{"size":986,"mtime":1607894189479,"results":"53","hashOfConfig":"31"},{"size":793,"mtime":1607901980221,"results":"54","hashOfConfig":"31"},{"size":483,"mtime":1607900570665,"results":"55","hashOfConfig":"31"},{"size":1053,"mtime":1607910260744,"results":"56","hashOfConfig":"31"},{"size":745,"mtime":1607905651044,"results":"57","hashOfConfig":"31"},{"size":249,"mtime":1607904519048,"results":"58","hashOfConfig":"31"},{"size":641,"mtime":1607905391346,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"fk2fnz",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"62"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js",[],["136","137"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js",["138","139","140","141"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js",["142"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js",["143"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport songService from \"../services/song-service\";\nimport UserContext from \"../user\";\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\n\nconst SongList = () => {\n  const [songInfo, setSongInfo] = useState(\"\");\n  const [songLoading, setSongLoading] = useState(true);\n\n  const username = React.useContext(UserContext);\n\n  console.log(\"in songs: \", username)\n\n  useEffect(() => {\n    songService\n      .getSongsInfo()\n      .then(response => setSongInfo(response))\n      .finally(() => setSongLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container align-items-left\">\n      <a href=\"..\" className=\"row\">Home</a>\n      <Link to=\"/menu\">Menu</Link>\n      <PageHeader>Songs</PageHeader>\n      {songLoading ? (\n        <TableBody>Loading...</TableBody>\n      ) : (\n        <>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <TableHeader scope=\"col\">TITLE</TableHeader>\n                <TableHeader scope=\"col\">ARTISTS</TableHeader>\n                <TableHeader scope=\"col\">DURATION</TableHeader>\n                <TableHeader scope=\"col\">GENRES</TableHeader>\n              </tr>\n            </thead>\n            <tbody>\n              {songInfo.map((song, i) => {\n                return (\n                  <tr key={i}>\n                    <td>\n                      <TableLink to={`/song/${song.song.id}`}>\n                        {song.song.name}\n                      </TableLink>\n                    </td>\n                    <td>\n                      {song.artistNames.map((artist, key) => (\n                        <div key={key}>\n                          <TableBody>{artist}</TableBody>\n                        </div>\n                      ))}\n                    </td>\n                    <td>\n                      <TableBody>\n                        {Math.floor(song.song.duration / 60)}:\n                        {(\n                          song.song.duration -\n                          Math.floor(song.song.duration / 60) * 60 +\n                          \"00\"\n                        ).slice(0, 2)}\n                      </TableBody>\n                    </td>\n                    <td>\n                      {song.genreNames.map((genre, index) => (\n                        <TableBody key={index}>{genre}</TableBody>\n                      ))}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SongList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/artist-list/artist-list.js",["144"],"import React, { useState, useEffect } from \"react\";\nimport artistService from \"../services/artist-service\";\nimport UserContext from \"../user\";\nimport { Link } from \"react-router-dom\";\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\n\nconst ArtistList = () => {\n  const [artistInfo, setArtistInfo] = useState(\"\");\n  const [artistListLoading, setArtistListLoading] = useState(true);\n\n  const username = React.useContext(UserContext);\n\n  useEffect(() => {\n    artistService\n      .findArtistInformation()\n      .then(response => setArtistInfo(response))\n      .finally(() => setArtistListLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container align-items-left\">\n       <a href=\"..\" className=\"row\">Home</a>\n      <Link to=\"/menu\">Menu</Link>\n        <PageHeader>Artists</PageHeader>\n      {(artistListLoading) ? (\n        <div>\n        <TableBody>Loading ...</TableBody>\n        </div>\n      ) : (\n        <>\n        <table className=\"table my-4\">\n          <thead>\n            <tr>\n              <TableHeader scope=\"col\">NAME</TableHeader>\n              <TableHeader scope=\"col\">BIO</TableHeader>\n              <TableHeader scope=\"col\">SOCIAL MEDIA LINKS</TableHeader>\n            </tr>\n          </thead>\n          <tbody>\n            {artistInfo.map((artist, i) => {\n                console.log(artist)\n              return (\n                <tr key={i}>\n                  <td><TableLink to={`/profile/${artist.artist.userId}`}> {artist.name} </TableLink></td>\n                  <td><TableBody>{artist.artist.bio}</TableBody></td>\n                  <td>\n                    {artist.artist.socialMedias.map(socialMedia => (\n                      <TableBody key={socialMedia.id}>{socialMedia.url}</TableBody>\n                    ))}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n     )}\n    </div>\n  );\n};\n\nexport default ArtistList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/users/users.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/profile/profile.js",["145","146","147","148","149"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport artistService from \"../services/artist-service\";\nimport listenerService from \"../services/listener-service\";\nimport userService from \"../services/user-service\";\nimport UserForm from \"../user-form/user-form\";\nimport SongForm from \"../song-form/song-form\";\nimport { DetailsHeader, Name, DetailsLabel, DetailsBody, ButtonContainer } from '../styled-details'\nimport Button from '../button/button'\nimport { TableLink } from '../styled-table'\n\nconst Profile = ({ ...props }) => {\n  const [user, setUser] = useState({});\n  const [userLoading, setUserLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [isArtist, setIsArtist] = useState(false);\n\n  const userId = props.match.params.id;\n\n  const history = useHistory();\n\n  const getType = () => {\n    artistService.findAllArtists().then(response => {\n      console.log(response);\n      {\n        response.map(\n          (artist, i) => artist.userId == userId && setIsArtist(true)\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    userService\n      .findUserById(userId)\n      .then(response => setUser(response))\n      .finally(() => {\n        getType();\n        setUserLoading(false);\n      });\n  }, []);\n\n  const edit = () => {\n    setIsEditing(true);\n  };\n\n  const deleteUser = () => {\n    userService.deleteUser(userId).then(response => console.log(response));\n    setIsDeleted(true);\n  };\n\n  return (\n    <div className=\"container my-5\">\n      <Link to=\"/menu\" className=\"row\">Menu</Link>\n      {isDeleted ? (\n        <>\n          <Name>User has been deleted</Name>\n          <TableLink to={\"/users\"}>Back to all users</TableLink>\n        </>\n      ) : (\n        <>\n          <DetailsHeader>Profile</DetailsHeader>\n          {userLoading ? (\n            <DetailsLabel>Loading ...</DetailsLabel>\n          ) : (\n            <>\n              <div>\n                <Name>\n                  {user.firstName} {user.lastName}\n                </Name>\n                {isEditing ? (\n                  <UserForm currUser={user} isEditing={true} />\n                ) : (\n                  <>\n                  <div>\n                    <DetailsLabel>BIRTHDAY:</DetailsLabel> \n                    <DetailsBody>{user.dob}</DetailsBody>\n                  </div>\n                  <div>\n                    <DetailsLabel>USERNAME:</DetailsLabel>\n                    <DetailsBody>{user.username}</DetailsBody>\n                  </div>\n                  <div>\n                    <DetailsLabel>PASSWORD:</DetailsLabel>\n                    <DetailsBody>{user.password}</DetailsBody>\n                  </div>\n                  </>\n                )}\n                {!isEditing && (\n                  <>\n                  <ButtonContainer>\n                    <div onClick={() => edit()}>\n                      <Button color={'#E3DAFD'} text={'EDIT'} />\n                    </div>\n                    <div onClick={() => deleteUser()}>\n                      <Button text={'DELETE'} color={'#FDDADA'} />\n                    </div>\n                    </ButtonContainer>\n                  </>\n                )}\n              </div>\n              {isArtist ? (\n                <SongForm\n                  currSong={{ name: \"\", duration: \"\" }}\n                  isEditing={false}\n                  artistId={userId}\n                />\n              ) : (\n                <></>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js",["150"],"const FIND_ALL_SONGS  = \"http://localhost:8080/findAllSongs\"\nconst FIND_SONG_BY_ID = \"http://localhost:8080/findSongById\"\nconst DELETE_SONG_URL = \"http://localhost:8080/deleteSong\"\nconst ADD_SONG_TO_PLAYLIST = \"http://localhost:8080/addSongToPlaylist\"\nconst FIND_SONG_ARTISTS = \"http://localhost:8080/findArtistsBySong\"\nconst FIND_SONG_GENRES = \"http://localhost:8080/findGenresBySong\"\nconst GET_SONGS_INFO = \"http://localhost:8080/getSongsInformation\"\nconst URL = \"http://localhost:8080\"\n\nexport const findAllSongs = () =>\n    fetch(`${FIND_ALL_SONGS}`)\n    .then(response => response.json())\n\nexport const getSongsInfo = () =>\n    fetch(`${GET_SONGS_INFO}`)\n    .then(response => response.json())\n\nexport const findSongById = (id) =>\n    fetch(`${FIND_SONG_BY_ID}/${id}`)\n    .then(response => response.json())\n\nexport const createNewSong = (artistId, song) =>\n    fetch(`${URL}/${artistId}/createSong`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...song\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => response.json());\n\nexport const updateSong = (song, songId) =>\n  fetch(`${URL}/updateSong/${songId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...song\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\nexport const deleteSong = (id) =>\n    fetch(`${DELETE_SONG_URL}/${id}`)\n\nexport const addSongToPlaylist = (playlistId, songId) =>\n    fetch(`${ADD_SONG_TO_PLAYLIST}/${playlistId}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongArtists = (songId) =>\n    fetch(`${FIND_SONG_ARTISTS}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongGenres = (id) =>\n    fetch(`${FIND_SONG_GENRES}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport default { findAllSongs, updateSong, getSongsInfo, findSongById, createNewSong, deleteSong, addSongToPlaylist, findSongArtists, findSongGenres }","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/artist-service.js",["151"],"const FIND_ALL_ARTISTS = \"http://localhost:8080/findAllArtists\"\nconst FIND_USER_BY_ID = \"http://localhost:8080/findUserById\"\nconst FIND_SOCIAL_MEDIA_BY_ARTIST = \"http://localhost:8080/findSocialMediaByArtist\"\nconst FIND_ARTIST_INFORMATION = \"http://localhost:8080/findArtistsInformation\"\n\nexport const findArtistInformation = () =>\n    fetch(`${FIND_ARTIST_INFORMATION}`)\n        .then(response => response.json())\n\nexport const findAllArtists = () =>\n    fetch(`${FIND_ALL_ARTISTS}`)\n        .then(response => response.json())\n\nexport const findUserForArtist = (id) =>\n    fetch(`${FIND_USER_BY_ID}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport const findSocialMediaForArtist = (id) =>\n    fetch(`${FIND_SOCIAL_MEDIA_BY_ARTIST}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport default { findAllArtists, findArtistInformation, findUserForArtist, findSocialMediaForArtist}","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/user-service.js",["152"],"const URL = \"http://localhost:8080\";\n\nexport const findUserById = (id) =>\n  fetch(`${URL}/findUserById/${id}`).then((response) => response.json());\n\n  export const findAllUsers = () =>\n  fetch(`${URL}/findAllUsers`).then((response) => response.json());\n\n  export const createNewUser = (user) =>\n  fetch(`${URL}/createUser`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      ...user\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const updateUser = (user, userId) =>\n  fetch(`${URL}/updateUser/${userId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...user\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const deleteUser = (userId) =>\n  fetch(`${URL}/deleteUser/${userId}`, {\n    method: \"DELETE\",\n  }).then((response) => response.text());\n\nexport default { findUserById, findAllUsers, createNewUser, updateUser, deleteUser };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/listener-service.js",["153"],"const URL = \"http://localhost:8080/\";\n\nexport const findAllListeners = () =>\n  fetch(`${URL}findAllListeners`).then((response) => response.json());\n\nexport const findListenerInformation = () =>\n  fetch(`${URL}findListenerInformation`).then((response) => response.json());\n\nexport default { findAllListeners, findListenerInformation };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-form/song-form.js",["154","155","156"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport songService from \"../services/song-service\";\nimport { FormContainer, FormLabel, ButtonBody } from '../styled-form'\nimport Button from '../button/button'\n\nconst SongForm = ({currSong, isEditing, artistId}) => {\n\n    const [newName, setNewName] = useState(currSong.name);\n    const [newDuration, setNewDuration] = useState(currSong.duration);\n    \n    const createSong = () => {\n        const newSong = {\n            name: newName,\n            duration: newDuration\n        };\n        songService\n          .createNewSong(artistId, newSong)\n          .then((response) => console.log(response));\n      };\n\n      const updateSong = () => {\n        const updatedSong = {\n            ...currSong,\n            name: newName,\n            duration: newDuration\n        }\n        console.log(updatedSong)\n        songService.updateSong(updatedSong, currSong.id).then((response) => console.log(response))\n    }\n    \n    return (\n        <FormContainer>\n        <form className=\"my-4\">\n        <div className=\"form-group\">\n          <FormLabel htmlFor=\"name\">SONG NAME</FormLabel>\n          <input\n            value={newName}\n            onChange={(event) => setNewName(event.target.value)}\n            id=\"name\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <FormLabel htmlFor=\"duration\">DURATION (S)</FormLabel>\n          <input\n            value={newDuration}\n            onChange={(event) => setNewDuration(event.target.value)}\n            id=\"duration\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        {isEditing ? (\n          <div onClick={() => updateSong()}>\n            <Button text={'UPDATE'} />\n          </div>\n        )\n        : (\n        <div onClick={() => createSong()}>\n          <Button text={'CREATE SONG'}></Button>\n        </div>\n        )}\n      </form>\n      </FormContainer>\n    )\n}\n\nexport default SongForm","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-details/song-details.js",["157","158"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport songService from \"../services/song-service\";\nimport SongForm from \"../song-form/song-form\";\nimport { DetailsHeader, Name, DetailsLabel, DetailsBody, ButtonContainer } from '../styled-details'\nimport Button from '../button/button'\nimport { TableLink } from '../styled-table'\n\nconst SongDetails = ({ ...props }) => {\n  const [song, setSong] = useState({});\n  const [songLoading, setSongLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n\n  const songId = props.match.params.id;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    songService\n      .findSongById(songId)\n      .then(response => setSong(response))\n      .finally(() => {\n        setSongLoading(false);\n      });\n  }, []);\n\n  const edit = () => {\n    setIsEditing(true);\n  };\n\n  const deleteSong = () => {\n    songService.deleteSong(songId).then(response => console.log(response));\n    setIsDeleted(true);\n  };\n\n  return (\n    <div className=\"container my-5\">\n      <Link to=\"/menu\" className=\"row\">Menu</Link>\n      {isDeleted ? (\n        <>\n          <Name>Song has been deleted</Name>\n          <TableLink to={\"/songs\"}>Back to all songs</TableLink>\n        </>\n      ) : (\n        <>\n          <DetailsHeader>Song Details</DetailsHeader>\n          {songLoading ? (\n            <DetailsLabel>Loading ...</DetailsLabel>\n          ) : (\n            <>\n              <div>\n                <Name>\n                  {song.name}\n                </Name>\n                {isEditing ? (\n                  <SongForm currSong={song} isEditing={true} />\n                ) : (\n                  <div>\n                    <DetailsLabel>DURATION:</DetailsLabel>\n                    <DetailsBody>{Math.floor(song.duration / 60)}:\n                        {(\n                          song.duration -\n                          Math.floor(song.duration / 60) * 60 +\n                          \"00\"\n                        ).slice(0, 2)}</DetailsBody>\n                  </div>\n                )}\n                {!isEditing && (\n                  <ButtonContainer>\n                    <div onClick={() => edit()}>\n                      <Button color={'#E3DAFD'} text={'EDIT'} />\n                    </div>\n                    <div onClick={() => deleteSong()}>\n                      <Button text={'DELETE'} color={'#FDDADA'} />\n                    </div>\n                  </ButtonContainer>\n                )}\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SongDetails;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists/playlists.js",["159","160"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport playlistService from \"../services/playlist-service\";\nimport userService from '../services/user-service';\nimport PlaylistForm from '../playlist-form/playlist-form';\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\n\nconst Playlists = () => {\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistLoading, setPlaylistLoading] = useState(true);\n\n  useEffect(() => {\n    playlistService\n      .findAllPlaylists()\n      .then((response) => setPlaylists(response))\n      .finally(() => setPlaylistLoading(false));\n  }, []);\n\n  console.log(playlists)\n  return (\n    <div className=\"container align-items-left\">\n      <a href=\"..\" className=\"row\">Home</a>\n      <Link to=\"/menu\">Menu</Link>\n      <PageHeader>Playlists</PageHeader>\n      {playlistLoading ? (\n        <TableHeader>Loading ...</TableHeader>\n      ) : (\n        <>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <TableHeader scope=\"col\">NAME</TableHeader>\n                <TableHeader scope=\"col\">DATE CREATED</TableHeader>\n              </tr>\n            </thead>\n            <tbody>\n              {playlists.map((playlist, i) => {\n                return (\n                  <tr key={i}>\n                    <td><TableLink to={`/playlist/${playlist.id}`}>{playlist.name}</TableLink></td>\n                    <td><TableBody>{playlist.createdAt}</TableBody></td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Playlists;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/playlist-service.js",["161"],"const URL = \"http://localhost:8080/\";\n\nexport const findAllPlaylists = () =>\n  fetch(`${URL}findAllPlaylists`).then((response) => response.json());\n\nexport const findPlaylistById = (id) =>\n  fetch(`${URL}findPlaylistById/${id}`).then((response) => response.json());\n\nexport const findSongsForPlaylist = (id) =>\n  fetch(`${URL}getSongInformationForPlaylist/${id}`).then((response) => response.json());\n\nexport const updatePlaylist = (playlist, playlistId) =>\n  fetch(`${URL}updatePlaylist/${playlistId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...playlist\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const addSongToPlaylist = (playlistId, songId) =>\n    fetch(`${URL}addSongToPlaylist/${playlistId}/${songId}`).then((response) => response.json());\n\n  export const deletePlaylist = (playlistId) =>\n    fetch(`${URL}deletePlaylist/${playlistId}`);\n\n  export const createNewPlaylist = (playlist) =>\n    fetch(`${URL}/createPlaylist`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...playlist\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => response.json());\n\n\nexport default { findAllPlaylists, findPlaylistById, findSongsForPlaylist, updatePlaylist, addSongToPlaylist, deletePlaylist, createNewPlaylist };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-details/playlist-details.js",["162","163","164"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport playlistService from \"../services/playlist-service\";\nimport userService from \"../services/user-service\";\nimport { ButtonBody } from '../styled-form';\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\nimport PlaylistForm from '../playlist-form/playlist-form';\nimport { DetailsHeader, Name, DetailsLabel, DetailsBody, ButtonContainer } from '../styled-details';\nimport Button from '../button/button';\n\nconst PlaylistDetails = ({ ...props }) => {\n  const [playlist, setPlaylist] = useState({});\n  const [playlistLoading, setPlaylistLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [songs, setSongs] = useState([]);\n  const [userLoading, setUserLoading] = useState(true);\n  const [songLoading, setSongLoading] = useState(true);\n\n  const playlistId = props.match.params.id;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    playlistService\n      .findPlaylistById(playlistId)\n      .then(playlist => {\n        userService\n          .findUserById(playlist.createdBy)\n          .then(user => (playlist.user = user))\n          .finally(() => setUserLoading(false));\n        setPlaylist(playlist);\n        playlistService\n          .findSongsForPlaylist(playlistId)\n          .then(songs => setSongs(songs))\n          .finally(() => setSongLoading(false));\n      })\n      .finally(() => {\n        setPlaylistLoading(false);\n      });\n  }, []);\n\n  const edit = () => {\n    setIsEditing(true);\n  };\n\n  const deletePlaylist = () => {\n    playlistService\n      .deletePlaylist(playlistId)\n      .then(response => console.log(response));\n    setIsDeleted(true);\n  };\n\n  return (\n    <div className=\"container my-5\">\n      {console.log(isEditing)}\n      {isEditing ? (\n        <PlaylistForm currPlaylist={playlist} editing={true}>,</PlaylistForm>\n      ) :\n      isDeleted ? (\n        <>\n          <Name>playlist has been deleted</Name>\n          <TableLink to={\"/playlists\"}>Back to all playlists</TableLink>\n        </>\n      ) : (\n        <>\n        <Link to=\"/menu\" className=\"row\">Menu</Link>\n          <DetailsHeader>Playlist</DetailsHeader>\n          {playlistLoading || userLoading ? (\n            <DetailsLabel>Loading ...</DetailsLabel>\n          ) : (\n            <>\n              <div>\n                <Name>{playlist.name}</Name>\n                {!isEditing && \n                (\n                  <>\n                  <div>\n                    <DetailsLabel>CREATED BY:</DetailsLabel>\n                    <DetailsBody>{playlist.user.firstName}{\" \"}{playlist.user.lastName}</DetailsBody>\n                  </div>\n                  <div>\n                    <DetailsLabel>CREATED AT:</DetailsLabel>\n                    <DetailsBody>{playlist.createdAt}</DetailsBody>\n                  </div>\n                  </>\n                )}\n                {!isEditing && (\n                  <ButtonContainer>\n                      <div onClick={() => edit()}>\n                        <Button color={'#E3DAFD'} text={'EDIT'} />\n                      </div>\n                      <div onClick={() => deletePlaylist()}>\n                        <Button text={'DELETE'} color={'#FDDADA'} />\n                      </div>\n                    </ButtonContainer>\n                )}\n                {songLoading ? (\n                  <DetailsLabel>Loading...</DetailsLabel>\n                ) : (\n                  <div>\n                      <PageHeader>Songs in {playlist.name}</PageHeader>\n                    <table className=\"table my-4\">\n                      <thead>\n                        <tr>\n                          <TableHeader scope=\"col\">NAME</TableHeader>\n                          <TableHeader scope=\"col\">ARTISTS</TableHeader>\n                          <TableHeader scope=\"col\">DURATION (S)</TableHeader>\n                          <TableHeader scope=\"col\">GENRES</TableHeader>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {songs.map((song, i) => {\n                          return (\n                            <tr key={i}>\n                              <td>\n                                <TableLink to={`/song/${song.song.id}`}>\n                                  {song.song.name}\n                                </TableLink>\n                              </td>\n                              <td>\n                                {song.artistNames.map((artist, key) => (\n                                  <div key={key}>\n                                    <TableBody>{artist}</TableBody>\n                                  </div>\n                                ))}\n                              </td>\n                              <td><TableBody>{song.song.duration}</TableBody></td>\n                              <td>\n                                {song.genreNames.map((genre, index) => (\n                                  <TableBody key={index}>{genre}</TableBody>\n                                ))}\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </>\n      )\n\n      }\n      \n    </div>\n  );\n};\n\nexport default PlaylistDetails;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-table.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/colors.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-form.js",["165","166"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user-form/user-form.js",["167","168","169","170","171","172"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/listener-list/listener-list.js",["173","174","175"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport listenerService from \"../services/listener-service\";\nimport { ButtonBody } from '../styled-form';\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\nimport PlaylistForm from '../playlist-form/playlist-form';\nimport Button from '../button/button'\n\nconst ListenerList = () => {\n  const [listenerInfo, setListenerInfo] = useState(\"\");\n  const [listenerLoading, setListenerLoading] = useState(true);\n  const [creatingPlaylist, setCreatingPlaylist] = useState(false);\n  const [newPlaylist, setNewPlaylist] = useState({})\n\n  const createdNewPlaylist = (creatorId) => {\n      console.log(creatorId)\n      setNewPlaylist({createdBy:creatorId});\n      setCreatingPlaylist(true);\n\n  }\n\n  useEffect(() => {\n    listenerService.findListenerInformation()\n      .then(response => setListenerInfo(response))\n      .finally(() => setListenerLoading(false));\n  }, []);\n\n  console.log(listenerInfo)\n  return ( <div>\n      {\n          creatingPlaylist ? ( <div>\n              <PlaylistForm currPlaylist={newPlaylist} editing={false}></PlaylistForm>\n          </div>\n\n          ) : ( <div>\n              <div className=\"container align-items-left\">\n              <a href=\"..\" className=\"row\">Home</a>\n      <Link to=\"/menu\">Menu</Link>\n      <PageHeader>Listeners</PageHeader>\n      {listenerLoading ? (\n        <TableHeader>Loading...</TableHeader>\n      ) : (\n        <>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <TableHeader scope=\"col\">NAME</TableHeader>\n                <TableHeader scope=\"col\">DATE JOINED</TableHeader>\n                <TableHeader />\n              </tr>\n            </thead>\n            <tbody>\n              {listenerInfo.map((listener, i) => {\n                return (\n                    <tr key={i}>\n                        {console.log(listener)}\n                        <td><TableBody>{listener.name}</TableBody></td>\n                        <td><TableBody>{listener.listener.dateJoined}</TableBody></td>\n                        <td>\n                        <div onClick={() => createdNewPlaylist(listener.listener.userId)}>\n                          <Button text={'CREATE PLAYLIST'} color={\"#A0D9B4\"} />\n                        </div>\n                        </td>\n                    </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n\n          </div>\n\n          )\n      }\n  </div>\n  );\n\n}\n\nexport default ListenerList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-form/playlist-form.js",["176","177","178","179","180","181"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport playlistService from \"../services/playlist-service\";\nimport songService from \"../services/song-service\";\nimport { ButtonBody } from \"../styled-form\";\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\nimport Button from \"../button/button\";\n\nconst PlaylistForm = ({ currPlaylist, editing }) => {\n  const [newPlaylistName, setNewPlaylistName] = useState(currPlaylist.name);\n  const [newCreatedAt, setNewCreatedAt] = useState(currPlaylist.createdAt);\n  const [newCreatedBy, setNewCreatedBy] = useState(currPlaylist.createdBy);\n  const [newSongAdditions, setNewSongAdditions] = useState(\n    currPlaylist.songAdditions\n  );\n  const [allSongs, setAllSongs] = useState([]);\n  const [allSongsLoading, setAllSongsLoading] = useState(true);\n\n  const removeSong = i => {\n    const songs = newSongAdditions;\n    delete songs[i];\n\n    setNewSongAdditions(songs);\n\n    const updatedPlaylist = {\n      ...currPlaylist,\n      name: newPlaylistName,\n      createdAt: newCreatedAt,\n      createdBy: newCreatedBy,\n      songAdditions: newSongAdditions\n    };\n    playlistService\n      .updatePlaylist(updatedPlaylist, currPlaylist.id)\n      .then(response => console.log(response));\n  };\n\n  const addSong = songId => {\n    playlistService\n      .addSongToPlaylist(currPlaylist.id, songId)\n      .then(response => console.log(response));\n  };\n\n  const update = () => {\n    console.log(\"new playlist name: \", newPlaylistName);\n    const updatedPlaylist = {\n      ...currPlaylist,\n      name: newPlaylistName,\n      createdAt: newCreatedAt,\n      createdBy: newCreatedBy,\n      songAdditions: newSongAdditions\n    };\n    playlistService\n      .updatePlaylist(updatedPlaylist, currPlaylist.id)\n      .then(response => console.log(response));\n  };\n\n  const createPlaylist = () => {\n    const newPlaylist = {\n      name: newPlaylistName,\n      createdAt: newCreatedAt,\n      createdBy: newCreatedBy,\n      songAdditions: []\n    };\n    playlistService\n      .createNewPlaylist(newPlaylist)\n      .then(response => console.log(response));\n  };\n\n  useEffect(() => {\n    songService\n      .findAllSongs()\n      .then(response => setAllSongs(response))\n      .finally(() => setAllSongsLoading(false));\n  }, []);\n\n  console.log(editing);\n  return (\n    <form className=\"my-4\">\n      {console.log(currPlaylist)}\n      <PageHeader>Playlist Name</PageHeader>\n      {console.log(newPlaylistName)}\n      <div className=\"form-group\">\n        <input\n          value={newPlaylistName}\n          onChange={event => setNewPlaylistName(event.target.value)}\n          id=\"playlistName\"\n          className=\"form-control col-6\"\n          type=\"text\"\n        />\n      </div>\n      {editing ? (\n        <div>\n          <div onClick={() => update()}>\n            <Button text={\"UPDATE PLAYLIST NAME\"}></Button>\n          </div>\n          <div>\n            <PageHeader>Songs</PageHeader>\n          </div>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <TableHeader scope=\"col\">NAME</TableHeader>\n                <TableHeader></TableHeader>\n              </tr>\n            </thead>\n            <tbody>\n              {newSongAdditions.map((song, i) => {\n                return (\n                  <tr key={i}>\n                    <td>\n                      <TableBody>{song.name}</TableBody>\n                    </td>\n                    <td>\n                      <div onClick={() => removeSong(i)}>\n                        <Button\n                          text={\"REMOVE FROM PLAYLIST\"}\n                          color={\"#FDDADA\"}\n                        ></Button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          <div>\n            <PageHeader>Add Songs to Playlist</PageHeader>\n            {allSongsLoading ? (\n              <TableBody>Loading...</TableBody>\n            ) : (\n              <table className=\"table my-4\">\n                <thead>\n                  <tr>\n                    <TableHeader scope=\"col\">SONG NAME</TableHeader>\n                    <TableHeader></TableHeader>\n                  </tr>\n                </thead>\n                <tbody>\n                  {allSongs.map((song, i) => {\n                    return (\n                      <tr key={i}>\n                        <td>\n                          <TableBody>{song.name}</TableBody>\n                        </td>\n                        <td>\n                          <div onClick={() => addSong(song.id)}>\n                            <Button\n                              text={\"ADD TO PLAYLIST\"}\n                              color={\"#A0D9B4\"}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div onClick={() => createPlaylist()}>\n          <Button text={\"CREATE PLAYLIST\"} color={\"#A0D9B4\"} />\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default PlaylistForm;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/menu/menu.js",["182","183","184","185","186","187"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport UserContext from '../user'\nimport { Link } from 'react-router-dom';\nimport {\n    PageHeader,\n    TableHeader,\n    TableLink,\n    TableBody\n  } from '../styled-table'\n\nconst Menu = () => {\n    const type = React.useContext(UserContext);\n    console.log(\"in menu: \", type)\n  return (\n    <div class=\"container\">\n        <UserContext.Provider value={type}>\n        <PageHeader>Menu</PageHeader>\n        <div>\n            <TableLink to=\"/songs\">Songs</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/artists\">Artists</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/playlists\">Playlists</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/users\">Users</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/listeners\">Listeners</TableLink>\n        </div>\n        </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default Menu;","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/home.js",["188","189","190","191","192","193","194","195"],"import React, { useState, useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport UserContext from '../user'\nimport { Link } from 'react-router-dom';\nimport { PageHeader } from '../styled-table';\nimport Menu from '../menu/menu';\nimport { EntryButton } from './styled'\nimport { ButtonBody } from \"../styled-form\";\nimport { WelcomeHeader } from '../styled-context-selector'\n\nconst Home = () => {\n  const userType = useContext(UserContext);\n\n  return (\n    <div class=\"container\">\n        {(userType == 'artist' || userType == 'listener') && (\n          <WelcomeHeader>Welcome back, {userType}!</WelcomeHeader>\n      )}\n        <Link to=\"/menu\">\n            <EntryButton class=\"btn\"><p>ENTER MIXTAPE</p></EntryButton>\n        </Link>\n    </div>\n  );\n}\n\nexport default Home;","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/styled.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-context-selector.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-details.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/button.js",["196","197"],"import React, { useEffect, useState } from \"react\";\nimport { StyledButton } from \"./styled\";\n\nconst Button = ({ text, color }) => {\n\n  return (\n    <StyledButton color={color}>\n      <p>{text}</p>\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/styled.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":12},{"ruleId":"202","severity":1,"message":"206","line":8,"column":27,"nodeType":"204","messageId":"205","endLine":8,"endColumn":33},{"ruleId":"207","severity":1,"message":"208","line":23,"column":29,"nodeType":"209","messageId":"210","endLine":23,"endColumn":31},{"ruleId":"207","severity":1,"message":"208","line":23,"column":53,"nodeType":"209","messageId":"210","endLine":23,"endColumn":55},{"ruleId":"202","severity":1,"message":"211","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"211","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"212","line":11,"column":9,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"202","severity":1,"message":"213","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":23},{"ruleId":"202","severity":1,"message":"214","line":21,"column":9,"nodeType":"204","messageId":"205","endLine":21,"endColumn":16},{"ruleId":"215","severity":1,"message":"216","line":26,"column":7,"nodeType":"217","messageId":"218","endLine":30,"endColumn":8},{"ruleId":"207","severity":1,"message":"208","line":28,"column":40,"nodeType":"209","messageId":"210","endLine":28,"endColumn":42},{"ruleId":"219","severity":1,"message":"220","line":42,"column":6,"nodeType":"221","endLine":42,"endColumn":8,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":64,"column":1,"nodeType":"225","endLine":64,"endColumn":151},{"ruleId":"223","severity":1,"message":"224","line":32,"column":1,"nodeType":"225","endLine":32,"endColumn":101},{"ruleId":"223","severity":1,"message":"224","line":36,"column":1,"nodeType":"225","endLine":36,"endColumn":86},{"ruleId":"223","severity":1,"message":"224","line":9,"column":1,"nodeType":"225","endLine":9,"endColumn":62},{"ruleId":"202","severity":1,"message":"226","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"227","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"228","line":4,"column":36,"nodeType":"204","messageId":"205","endLine":4,"endColumn":46},{"ruleId":"202","severity":1,"message":"214","line":17,"column":9,"nodeType":"204","messageId":"205","endLine":17,"endColumn":16},{"ruleId":"219","severity":1,"message":"229","line":26,"column":6,"nodeType":"221","endLine":26,"endColumn":8,"suggestions":"230"},{"ruleId":"202","severity":1,"message":"231","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":19},{"ruleId":"202","severity":1,"message":"232","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"223","severity":1,"message":"224","line":41,"column":1,"nodeType":"225","endLine":41,"endColumn":147},{"ruleId":"202","severity":1,"message":"228","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"202","severity":1,"message":"214","line":22,"column":9,"nodeType":"204","messageId":"205","endLine":22,"endColumn":16},{"ruleId":"219","severity":1,"message":"233","line":41,"column":6,"nodeType":"221","endLine":41,"endColumn":8,"suggestions":"234"},{"ruleId":"202","severity":1,"message":"227","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"235","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"226","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"227","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"236","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":21},{"ruleId":"202","severity":1,"message":"213","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":23},{"ruleId":"202","severity":1,"message":"228","line":6,"column":36,"nodeType":"204","messageId":"205","endLine":6,"endColumn":46},{"ruleId":"202","severity":1,"message":"237","line":39,"column":11,"nodeType":"204","messageId":"205","endLine":39,"endColumn":21},{"ruleId":"202","severity":1,"message":"211","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"228","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"202","severity":1,"message":"238","line":6,"column":35,"nodeType":"204","messageId":"205","endLine":6,"endColumn":44},{"ruleId":"202","severity":1,"message":"227","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"239","line":2,"column":16,"nodeType":"204","messageId":"205","endLine":2,"endColumn":26},{"ruleId":"202","severity":1,"message":"228","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"202","severity":1,"message":"238","line":6,"column":35,"nodeType":"204","messageId":"205","endLine":6,"endColumn":44},{"ruleId":"202","severity":1,"message":"240","line":11,"column":24,"nodeType":"204","messageId":"205","endLine":11,"endColumn":39},{"ruleId":"202","severity":1,"message":"241","line":12,"column":24,"nodeType":"204","messageId":"205","endLine":12,"endColumn":39},{"ruleId":"202","severity":1,"message":"242","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"226","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"211","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"227","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":14},{"ruleId":"202","severity":1,"message":"243","line":7,"column":5,"nodeType":"204","messageId":"205","endLine":7,"endColumn":16},{"ruleId":"202","severity":1,"message":"244","line":9,"column":5,"nodeType":"204","messageId":"205","endLine":9,"endColumn":14},{"ruleId":"202","severity":1,"message":"242","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"226","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"211","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"245","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":20},{"ruleId":"202","severity":1,"message":"246","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":12},{"ruleId":"202","severity":1,"message":"228","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":20},{"ruleId":"207","severity":1,"message":"208","line":16,"column":20,"nodeType":"209","messageId":"210","endLine":16,"endColumn":22},{"ruleId":"207","severity":1,"message":"208","line":16,"column":44,"nodeType":"209","messageId":"210","endLine":16,"endColumn":46},{"ruleId":"202","severity":1,"message":"226","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"242","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactDOM' is defined but never used.","'username' is assigned a value but never used.","'listenerService' is defined but never used.","'history' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getType' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["249"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Link' is defined but never used.","'ButtonBody' is defined but never used.","React Hook useEffect has a missing dependency: 'songId'. Either include it or remove the dependency array.",["250"],"'userService' is defined but never used.","'PlaylistForm' is defined but never used.","React Hook useEffect has a missing dependency: 'playlistId'. Either include it or remove the dependency array.",["251"],"'colors' is defined but never used.","'artistService' is defined but never used.","'deleteUser' is assigned a value but never used.","'TableLink' is defined but never used.","'useHistory' is defined but never used.","'setNewCreatedAt' is assigned a value but never used.","'setNewCreatedBy' is assigned a value but never used.","'useState' is defined but never used.","'TableHeader' is defined but never used.","'TableBody' is defined but never used.","'PageHeader' is defined but never used.","'Menu' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [getType, userId]",{"range":"258","text":"259"},"Update the dependencies array to be: [songId]",{"range":"260","text":"261"},"Update the dependencies array to be: [playlistId]",{"range":"262","text":"263"},[1351,1353],"[getType, userId]",[880,882],"[songId]",[1573,1575],"[playlistId]"]