[{"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js":"1","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js":"2","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js":"3","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js":"4","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/artist-list/artist-list.js":"5","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/users/users.js":"6","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/profile/profile.js":"7","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js":"8","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/artist-service.js":"9","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/user-service.js":"10","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/listener-service.js":"11","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-form/song-form.js":"12","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-details/song-details.js":"13","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists/playlists.js":"14","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/playlist-service.js":"15","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-details/playlist-details.js":"16","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-table.js":"17","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/colors.js":"18","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-form.js":"19","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user-form/user-form.js":"20","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/listener-list/listener-list.js":"21","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-form/playlist-form.js":"22","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/menu/menu.js":"23","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/home.js":"24","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-context-selector.js":"25","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-details.js":"26","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/button.js":"27","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/styled.js":"28","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-nav.js":"29"},{"size":355,"mtime":1607706360486,"results":"30","hashOfConfig":"31"},{"size":2260,"mtime":1607910202236,"results":"32","hashOfConfig":"31"},{"size":133,"mtime":1607902298065,"results":"33","hashOfConfig":"31"},{"size":2429,"mtime":1607920076274,"results":"34","hashOfConfig":"31"},{"size":2040,"mtime":1607914981282,"results":"35","hashOfConfig":"31"},{"size":2085,"mtime":1607915051184,"results":"36","hashOfConfig":"31"},{"size":4356,"mtime":1607915340662,"results":"37","hashOfConfig":"31"},{"size":2105,"mtime":1607733715923,"results":"38","hashOfConfig":"31"},{"size":1348,"mtime":1607917036716,"results":"39","hashOfConfig":"31"},{"size":996,"mtime":1607706069808,"results":"40","hashOfConfig":"31"},{"size":499,"mtime":1607917028347,"results":"41","hashOfConfig":"31"},{"size":2070,"mtime":1607906896605,"results":"42","hashOfConfig":"31"},{"size":3100,"mtime":1607915246265,"results":"43","hashOfConfig":"31"},{"size":1762,"mtime":1607915027717,"results":"44","hashOfConfig":"31"},{"size":1371,"mtime":1607887227882,"results":"45","hashOfConfig":"31"},{"size":6179,"mtime":1607919862570,"results":"46","hashOfConfig":"31"},{"size":740,"mtime":1607902462157,"results":"47","hashOfConfig":"31"},{"size":105,"mtime":1607809851914,"results":"48","hashOfConfig":"31"},{"size":741,"mtime":1607920024669,"results":"49","hashOfConfig":"31"},{"size":4018,"mtime":1607919706323,"results":"50","hashOfConfig":"31"},{"size":3724,"mtime":1607915095163,"results":"51","hashOfConfig":"31"},{"size":5245,"mtime":1607909913752,"results":"52","hashOfConfig":"31"},{"size":986,"mtime":1607894189479,"results":"53","hashOfConfig":"31"},{"size":621,"mtime":1607913526434,"results":"54","hashOfConfig":"31"},{"size":1062,"mtime":1607913653492,"results":"55","hashOfConfig":"31"},{"size":842,"mtime":1607913127778,"results":"56","hashOfConfig":"31"},{"size":250,"mtime":1607919036851,"results":"57","hashOfConfig":"31"},{"size":641,"mtime":1607905391346,"results":"58","hashOfConfig":"31"},{"size":640,"mtime":1607915372351,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"fk2fnz",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/index.js",[],["126","127"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/App.js",["128","129","130","131"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user.js",["132"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-list/song-list.js",["133","134"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/artist-list/artist-list.js",["135"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/users/users.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/profile/profile.js",["136","137","138","139","140","141","142"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/song-service.js",["143"],"const FIND_ALL_SONGS  = \"http://localhost:8080/findAllSongs\"\nconst FIND_SONG_BY_ID = \"http://localhost:8080/findSongById\"\nconst DELETE_SONG_URL = \"http://localhost:8080/deleteSong\"\nconst ADD_SONG_TO_PLAYLIST = \"http://localhost:8080/addSongToPlaylist\"\nconst FIND_SONG_ARTISTS = \"http://localhost:8080/findArtistsBySong\"\nconst FIND_SONG_GENRES = \"http://localhost:8080/findGenresBySong\"\nconst GET_SONGS_INFO = \"http://localhost:8080/getSongsInformation\"\nconst URL = \"http://localhost:8080\"\n\nexport const findAllSongs = () =>\n    fetch(`${FIND_ALL_SONGS}`)\n    .then(response => response.json())\n\nexport const getSongsInfo = () =>\n    fetch(`${GET_SONGS_INFO}`)\n    .then(response => response.json())\n\nexport const findSongById = (id) =>\n    fetch(`${FIND_SONG_BY_ID}/${id}`)\n    .then(response => response.json())\n\nexport const createNewSong = (artistId, song) =>\n    fetch(`${URL}/${artistId}/createSong`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...song\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => response.json());\n\nexport const updateSong = (song, songId) =>\n  fetch(`${URL}/updateSong/${songId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...song\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\nexport const deleteSong = (id) =>\n    fetch(`${DELETE_SONG_URL}/${id}`)\n\nexport const addSongToPlaylist = (playlistId, songId) =>\n    fetch(`${ADD_SONG_TO_PLAYLIST}/${playlistId}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongArtists = (songId) =>\n    fetch(`${FIND_SONG_ARTISTS}/${songId}`)\n    .then(response => response.json())\n\nexport const findSongGenres = (id) =>\n    fetch(`${FIND_SONG_GENRES}/${id}`)\n        .then(response => {\n            return response.text()\n        })\n        .then((data) => {\n            return data ? JSON.parse(data) : {}\n        })\n\nexport default { findAllSongs, updateSong, getSongsInfo, findSongById, createNewSong, deleteSong, addSongToPlaylist, findSongArtists, findSongGenres }","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/artist-service.js",["144"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/user-service.js",["145"],"const URL = \"http://localhost:8080\";\n\nexport const findUserById = (id) =>\n  fetch(`${URL}/findUserById/${id}`).then((response) => response.json());\n\n  export const findAllUsers = () =>\n  fetch(`${URL}/findAllUsers`).then((response) => response.json());\n\n  export const createNewUser = (user) =>\n  fetch(`${URL}/createUser`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      ...user\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const updateUser = (user, userId) =>\n  fetch(`${URL}/updateUser/${userId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...user\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const deleteUser = (userId) =>\n  fetch(`${URL}/deleteUser/${userId}`, {\n    method: \"DELETE\",\n  }).then((response) => response.text());\n\nexport default { findUserById, findAllUsers, createNewUser, updateUser, deleteUser };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/listener-service.js",["146"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-form/song-form.js",["147","148","149"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport songService from \"../services/song-service\";\nimport { FormContainer, FormLabel, ButtonBody } from '../styled-form'\nimport Button from '../button/button'\n\nconst SongForm = ({currSong, isEditing, artistId}) => {\n\n    const [newName, setNewName] = useState(currSong.name);\n    const [newDuration, setNewDuration] = useState(currSong.duration);\n    \n    const createSong = () => {\n        const newSong = {\n            name: newName,\n            duration: newDuration\n        };\n        songService\n          .createNewSong(artistId, newSong)\n          .then((response) => console.log(response));\n      };\n\n      const updateSong = () => {\n        const updatedSong = {\n            ...currSong,\n            name: newName,\n            duration: newDuration\n        }\n        console.log(updatedSong)\n        songService.updateSong(updatedSong, currSong.id).then((response) => console.log(response))\n    }\n    \n    return (\n        <FormContainer>\n        <form className=\"my-4\">\n        <div className=\"form-group\">\n          <FormLabel htmlFor=\"name\">SONG NAME</FormLabel>\n          <input\n            value={newName}\n            onChange={(event) => setNewName(event.target.value)}\n            id=\"name\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <FormLabel htmlFor=\"duration\">DURATION (S)</FormLabel>\n          <input\n            value={newDuration}\n            onChange={(event) => setNewDuration(event.target.value)}\n            id=\"duration\"\n            className=\"form-control col-6\"\n            type=\"text\"\n          />\n        </div>\n        {isEditing ? (\n          <div onClick={() => updateSong()}>\n            <Button text={'UPDATE'} />\n          </div>\n        )\n        : (\n        <div onClick={() => createSong()}>\n          <Button text={'CREATE SONG'}></Button>\n        </div>\n        )}\n      </form>\n      </FormContainer>\n    )\n}\n\nexport default SongForm","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/song-details/song-details.js",["150","151","152"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlists/playlists.js",["153","154"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/services/playlist-service.js",["155"],"const URL = \"http://localhost:8080/\";\n\nexport const findAllPlaylists = () =>\n  fetch(`${URL}findAllPlaylists`).then((response) => response.json());\n\nexport const findPlaylistById = (id) =>\n  fetch(`${URL}findPlaylistById/${id}`).then((response) => response.json());\n\nexport const findSongsForPlaylist = (id) =>\n  fetch(`${URL}getSongInformationForPlaylist/${id}`).then((response) => response.json());\n\nexport const updatePlaylist = (playlist, playlistId) =>\n  fetch(`${URL}updatePlaylist/${playlistId}`, {\n    method: \"PUT\",\n    body: JSON.stringify({\n      ...playlist\n    }),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n  export const addSongToPlaylist = (playlistId, songId) =>\n    fetch(`${URL}addSongToPlaylist/${playlistId}/${songId}`).then((response) => response.json());\n\n  export const deletePlaylist = (playlistId) =>\n    fetch(`${URL}deletePlaylist/${playlistId}`);\n\n  export const createNewPlaylist = (playlist) =>\n    fetch(`${URL}/createPlaylist`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...playlist\n      }),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((response) => response.json());\n\n\nexport default { findAllPlaylists, findPlaylistById, findSongsForPlaylist, updatePlaylist, addSongToPlaylist, deletePlaylist, createNewPlaylist };\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-details/playlist-details.js",["156","157","158"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-table.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/colors.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-form.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/user-form/user-form.js",["159","160","161","162"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/listener-list/listener-list.js",["163","164","165","166"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport listenerService from \"../services/listener-service\";\nimport { ButtonBody } from \"../styled-form\";\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\nimport PlaylistForm from \"../playlist-form/playlist-form\";\nimport Button from \"../button/button\";\nimport UserContext from \"../user\";\nimport { LinkContainer } from \"../styled-nav\";\n\nconst ListenerList = () => {\n  const [listenerInfo, setListenerInfo] = useState(\"\");\n  const [listenerLoading, setListenerLoading] = useState(true);\n  const [creatingPlaylist, setCreatingPlaylist] = useState(false);\n  const [newPlaylist, setNewPlaylist] = useState({});\n\n  const userType = useContext(UserContext);\n\n  const createdNewPlaylist = creatorId => {\n    console.log(creatorId);\n    setNewPlaylist({ createdBy: creatorId });\n    setCreatingPlaylist(true);\n  };\n\n  useEffect(() => {\n    listenerService\n      .findListenerInformation()\n      .then(response => setListenerInfo(response))\n      .finally(() => setListenerLoading(false));\n  }, []);\n\n  console.log(listenerInfo);\n  return (\n    <div>\n      {creatingPlaylist ? (\n        <div>\n          <PlaylistForm\n            currPlaylist={newPlaylist}\n            editing={false}\n          ></PlaylistForm>\n        </div>\n      ) : (\n        <div>\n          <div className=\"container align-items-left\">\n            <LinkContainer>\n              <Link to=\"/\">HOME</Link>\n              <Link to=\"/menu\">MENU</Link>\n            </LinkContainer>\n            <PageHeader>Listeners</PageHeader>\n            {listenerLoading ? (\n              <TableHeader>Loading...</TableHeader>\n            ) : (\n              <>\n                <table className=\"table my-4\">\n                  <thead>\n                    <tr>\n                      <TableHeader scope=\"col\">NAME</TableHeader>\n                      <TableHeader scope=\"col\">DATE JOINED</TableHeader>\n                      <TableHeader />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {listenerInfo.map((listener, i) => {\n                      return (\n                        <tr key={i}>\n                          {console.log(listener)}\n                          <td>\n                            <TableBody>{listener.name}</TableBody>\n                          </td>\n                          <td>\n                            <TableBody>\n                              {listener.listener.dateJoined}\n                            </TableBody>\n                          </td>\n                          <td>\n                            {userType == \"listener\" ? (\n                              <div\n                                onClick={() =>\n                                  createdNewPlaylist(listener.listener.userId)\n                                }\n                              >\n                                <Button\n                                  text={\"CREATE PLAYLIST\"}\n                                  color={\"#A0D9B4\"}\n                                />\n                              </div>\n                            ) : (\n                              <TableBody>\n                                You do not have permissions to create a\n                                playlist.\n                              </TableBody>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ListenerList;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/playlist-form/playlist-form.js",["167","168","169","170","171","172"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport playlistService from \"../services/playlist-service\";\nimport songService from \"../services/song-service\";\nimport { ButtonBody } from \"../styled-form\";\nimport { PageHeader, TableHeader, TableLink, TableBody } from \"../styled-table\";\nimport Button from \"../button/button\";\n\nconst PlaylistForm = ({ currPlaylist, editing }) => {\n  const [newPlaylistName, setNewPlaylistName] = useState(currPlaylist.name);\n  const [newCreatedAt, setNewCreatedAt] = useState(currPlaylist.createdAt);\n  const [newCreatedBy, setNewCreatedBy] = useState(currPlaylist.createdBy);\n  const [newSongAdditions, setNewSongAdditions] = useState(\n    currPlaylist.songAdditions\n  );\n  const [allSongs, setAllSongs] = useState([]);\n  const [allSongsLoading, setAllSongsLoading] = useState(true);\n\n  const removeSong = i => {\n    const songs = newSongAdditions;\n    delete songs[i];\n\n    setNewSongAdditions(songs);\n\n    const updatedPlaylist = {\n      ...currPlaylist,\n      name: newPlaylistName,\n      createdAt: newCreatedAt,\n      createdBy: newCreatedBy,\n      songAdditions: newSongAdditions\n    };\n    playlistService\n      .updatePlaylist(updatedPlaylist, currPlaylist.id)\n      .then(response => console.log(response));\n  };\n\n  const addSong = songId => {\n    playlistService\n      .addSongToPlaylist(currPlaylist.id, songId)\n      .then(response => console.log(response));\n  };\n\n  const update = () => {\n    console.log(\"new playlist name: \", newPlaylistName);\n    const updatedPlaylist = {\n      ...currPlaylist,\n      name: newPlaylistName,\n      createdAt: newCreatedAt,\n      createdBy: newCreatedBy,\n      songAdditions: newSongAdditions\n    };\n    playlistService\n      .updatePlaylist(updatedPlaylist, currPlaylist.id)\n      .then(response => console.log(response));\n  };\n\n  const createPlaylist = () => {\n    const newPlaylist = {\n      name: newPlaylistName,\n      createdAt: newCreatedAt,\n      createdBy: newCreatedBy,\n      songAdditions: []\n    };\n    playlistService\n      .createNewPlaylist(newPlaylist)\n      .then(response => console.log(response));\n  };\n\n  useEffect(() => {\n    songService\n      .findAllSongs()\n      .then(response => setAllSongs(response))\n      .finally(() => setAllSongsLoading(false));\n  }, []);\n\n  console.log(editing);\n  return (\n    <form className=\"my-4\">\n      {console.log(currPlaylist)}\n      <PageHeader>Playlist Name</PageHeader>\n      {console.log(newPlaylistName)}\n      <div className=\"form-group\">\n        <input\n          value={newPlaylistName}\n          onChange={event => setNewPlaylistName(event.target.value)}\n          id=\"playlistName\"\n          className=\"form-control col-6\"\n          type=\"text\"\n        />\n      </div>\n      {editing ? (\n        <div>\n          <div onClick={() => update()}>\n            <Button text={\"UPDATE PLAYLIST NAME\"}></Button>\n          </div>\n          <div>\n            <PageHeader>Songs</PageHeader>\n          </div>\n          <table className=\"table my-4\">\n            <thead>\n              <tr>\n                <TableHeader scope=\"col\">NAME</TableHeader>\n                <TableHeader></TableHeader>\n              </tr>\n            </thead>\n            <tbody>\n              {newSongAdditions.map((song, i) => {\n                return (\n                  <tr key={i}>\n                    <td>\n                      <TableBody>{song.name}</TableBody>\n                    </td>\n                    <td>\n                      <div onClick={() => removeSong(i)}>\n                        <Button\n                          text={\"REMOVE FROM PLAYLIST\"}\n                          color={\"#FDDADA\"}\n                        ></Button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          <div>\n            <PageHeader>Add Songs to Playlist</PageHeader>\n            {allSongsLoading ? (\n              <TableBody>Loading...</TableBody>\n            ) : (\n              <table className=\"table my-4\">\n                <thead>\n                  <tr>\n                    <TableHeader scope=\"col\">SONG NAME</TableHeader>\n                    <TableHeader></TableHeader>\n                  </tr>\n                </thead>\n                <tbody>\n                  {allSongs.map((song, i) => {\n                    return (\n                      <tr key={i}>\n                        <td>\n                          <TableBody>{song.name}</TableBody>\n                        </td>\n                        <td>\n                          <div onClick={() => addSong(song.id)}>\n                            <Button\n                              text={\"ADD TO PLAYLIST\"}\n                              color={\"#A0D9B4\"}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div onClick={() => createPlaylist()}>\n          <Button text={\"CREATE PLAYLIST\"} color={\"#A0D9B4\"} />\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default PlaylistForm;\n","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/menu/menu.js",["173","174","175","176","177","178"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport UserContext from '../user'\nimport { Link } from 'react-router-dom';\nimport {\n    PageHeader,\n    TableHeader,\n    TableLink,\n    TableBody\n  } from '../styled-table'\n\nconst Menu = () => {\n    const type = React.useContext(UserContext);\n    console.log(\"in menu: \", type)\n  return (\n    <div class=\"container\">\n        <UserContext.Provider value={type}>\n        <PageHeader>Menu</PageHeader>\n        <div>\n            <TableLink to=\"/songs\">Songs</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/artists\">Artists</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/playlists\">Playlists</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/users\">Users</TableLink>\n        </div>\n        <div>\n            <TableLink to=\"/listeners\">Listeners</TableLink>\n        </div>\n        </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default Menu;","/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/home/home.js",["179","180","181"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-context-selector.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-details.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/button.js",["182","183"],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/button/styled.js",[],"/Users/mnavracruz/Desktop/database/final_project/mixtape-ui/src/styled-nav.js",["184"],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":12},{"ruleId":"189","severity":1,"message":"193","line":8,"column":27,"nodeType":"191","messageId":"192","endLine":8,"endColumn":33},{"ruleId":"194","severity":1,"message":"195","line":23,"column":29,"nodeType":"196","messageId":"197","endLine":23,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":23,"column":53,"nodeType":"196","messageId":"197","endLine":23,"endColumn":55},{"ruleId":"189","severity":1,"message":"198","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"198","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":16},{"ruleId":"189","severity":1,"message":"199","line":13,"column":9,"nodeType":"191","messageId":"192","endLine":13,"endColumn":17},{"ruleId":"189","severity":1,"message":"199","line":12,"column":9,"nodeType":"191","messageId":"192","endLine":12,"endColumn":17},{"ruleId":"189","severity":1,"message":"200","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":35,"column":7,"nodeType":"203","messageId":"204","endLine":39,"endColumn":8},{"ruleId":"194","severity":1,"message":"195","line":37,"column":40,"nodeType":"196","messageId":"197","endLine":37,"endColumn":42},{"ruleId":"205","severity":1,"message":"206","line":51,"column":6,"nodeType":"207","endLine":51,"endColumn":8,"suggestions":"208"},{"ruleId":"194","severity":1,"message":"195","line":101,"column":40,"nodeType":"196","messageId":"197","endLine":101,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":102,"column":40,"nodeType":"196","messageId":"197","endLine":102,"endColumn":42},{"ruleId":"194","severity":1,"message":"195","line":127,"column":25,"nodeType":"196","messageId":"197","endLine":127,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":64,"column":1,"nodeType":"211","endLine":64,"endColumn":151},{"ruleId":"209","severity":1,"message":"210","line":39,"column":1,"nodeType":"211","endLine":39,"endColumn":118},{"ruleId":"209","severity":1,"message":"210","line":36,"column":1,"nodeType":"211","endLine":36,"endColumn":86},{"ruleId":"209","severity":1,"message":"210","line":15,"column":1,"nodeType":"211","endLine":15,"endColumn":81},{"ruleId":"189","severity":1,"message":"212","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"213","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"214","line":4,"column":36,"nodeType":"191","messageId":"192","endLine":4,"endColumn":46},{"ruleId":"189","severity":1,"message":"215","line":2,"column":16,"nodeType":"191","messageId":"192","endLine":2,"endColumn":26},{"ruleId":"205","severity":1,"message":"216","line":35,"column":6,"nodeType":"207","endLine":35,"endColumn":8,"suggestions":"217"},{"ruleId":"194","severity":1,"message":"195","line":75,"column":27,"nodeType":"196","messageId":"197","endLine":75,"endColumn":29},{"ruleId":"189","severity":1,"message":"218","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":19},{"ruleId":"189","severity":1,"message":"219","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":41,"column":1,"nodeType":"211","endLine":41,"endColumn":147},{"ruleId":"189","severity":1,"message":"214","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":20},{"ruleId":"205","severity":1,"message":"220","line":50,"column":6,"nodeType":"207","endLine":50,"endColumn":8,"suggestions":"221"},{"ruleId":"194","severity":1,"message":"195","line":98,"column":27,"nodeType":"196","messageId":"197","endLine":98,"endColumn":29},{"ruleId":"189","severity":1,"message":"212","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"213","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":29,"column":29,"nodeType":"196","messageId":"197","endLine":29,"endColumn":31},{"ruleId":"189","severity":1,"message":"222","line":52,"column":9,"nodeType":"191","messageId":"192","endLine":52,"endColumn":19},{"ruleId":"189","severity":1,"message":"198","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":16},{"ruleId":"189","severity":1,"message":"214","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":20},{"ruleId":"189","severity":1,"message":"223","line":6,"column":35,"nodeType":"191","messageId":"192","endLine":6,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":77,"column":39,"nodeType":"196","messageId":"197","endLine":77,"endColumn":41},{"ruleId":"189","severity":1,"message":"213","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"215","line":2,"column":16,"nodeType":"191","messageId":"192","endLine":2,"endColumn":26},{"ruleId":"189","severity":1,"message":"214","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":20},{"ruleId":"189","severity":1,"message":"223","line":6,"column":35,"nodeType":"191","messageId":"192","endLine":6,"endColumn":44},{"ruleId":"189","severity":1,"message":"224","line":11,"column":24,"nodeType":"191","messageId":"192","endLine":11,"endColumn":39},{"ruleId":"189","severity":1,"message":"225","line":12,"column":24,"nodeType":"191","messageId":"192","endLine":12,"endColumn":39},{"ruleId":"189","severity":1,"message":"226","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"212","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"198","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"213","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"227","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":16},{"ruleId":"189","severity":1,"message":"228","line":9,"column":5,"nodeType":"191","messageId":"192","endLine":9,"endColumn":14},{"ruleId":"189","severity":1,"message":"198","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":13,"column":20,"nodeType":"196","messageId":"197","endLine":13,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":13,"column":44,"nodeType":"196","messageId":"197","endLine":13,"endColumn":46},{"ruleId":"189","severity":1,"message":"212","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"226","line":1,"column":28,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"229","line":5,"column":7,"nodeType":"191","messageId":"192","endLine":5,"endColumn":15},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactDOM' is defined but never used.","'username' is assigned a value but never used.","'listenerService' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getType' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["232"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Link' is defined but never used.","'ButtonBody' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'songId'. Either include it or remove the dependency array.",["233"],"'userService' is defined but never used.","'PlaylistForm' is defined but never used.","React Hook useEffect has a missing dependency: 'playlistId'. Either include it or remove the dependency array.",["234"],"'deleteUser' is assigned a value but never used.","'TableLink' is defined but never used.","'setNewCreatedAt' is assigned a value but never used.","'setNewCreatedBy' is assigned a value but never used.","'useState' is defined but never used.","'TableHeader' is defined but never used.","'TableBody' is defined but never used.","'HomeLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [getType, userId]",{"range":"241","text":"242"},"Update the dependencies array to be: [songId]",{"range":"243","text":"244"},"Update the dependencies array to be: [playlistId]",{"range":"245","text":"246"},[1473,1475],"[getType, userId]",[1014,1016],"[songId]",[1691,1693],"[playlistId]"]